@page "/Auth"
@using Data.Models
@using Microsoft.AspNetCore.Mvc
@using Microsoft.AspNetCore.Http.HttpResults
@using Microsoft.AspNetCore.Components.Forms
@using System.Net
@using Microsoft.AspNetCore.Http
@using System.Net.Http
@using Microsoft.Extensions.Caching.Memory

@inject IHttpContextAccessor HttpContextAccessor
@inject IMemoryCache Cache
@inject NavigationManager NavigationManager

<PageTitle>Авторизация</PageTitle>

<html>

<head>
    <link rel="stylesheet" href="~/css/site.css" />
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>

</head>

<body>
    <center>
        <div class="wrapper">


            <h1>Авторизация</h1>
            <form method="post" @onsubmit="Submit" @formname="starship-plain-form">
                <AntiforgeryToken />
                <div>
                    <label>
                        Identifier:
                        <InputText @bind-Value="InputAuth!.Login" />
                        <InputText @bind-Value="InputAuth!.Password" />
                    </label>
                </div>
                <div>
                    <button type="submit">Submit</button>
                </div>
            </form>
            @* <EditForm class="form-signin" OnSubmit="@Submit" FormName="uniq">
            <InputText @bind-Value="InputAuth!.Login" class="m-2 p-2 form-control" placeholder="Имя пользователя" />
            <InputText @bind-Value="InputAuth!.Password" class="m-2 p-2 form-control" placeholder="Пароль" />
            <input type="submit" class="m-2 p-2 btn btn-primary" value="Войти" />
            </EditForm> *@
            <div class="register_link">
                <p>
                    Нет аккаунта?
                    <a asp-page="SignUp">Зарегистрироваться</a>
                </p>
            </div>
        </div>
    </center>

</body>

</html>

@code {
    [SupplyParameterFromForm]
    private Users InputAuth { get; set; }

    static HttpClient Http = new HttpClient();

    protected override void OnInitialized() => InputAuth ??= new();

    private async void Submit()
    {

        Http.Timeout = TimeSpan.FromMinutes(30);

        using var response = await Http.PostAsJsonAsync($"https://localhost:7244/api/User/Auth", InputAuth);
        // если объект на сервере найден, то есть статусный код равен 404
        if (response.IsSuccessStatusCode)
        {
            var person = await response.Content.ReadFromJsonAsync<Users>();
            Console.WriteLine($"ID пользователя - {person.Id}");
            var cacheEntryOptions = new MemoryCacheEntryOptions()
            .SetSlidingExpiration(TimeSpan.FromMinutes(5)) // Устанавливаем скользящее истечение срока действия
            .SetAbsoluteExpiration(TimeSpan.FromHours(1)); // Устанавливаем абсолютное истечение срока действия

            Cache.Set("User", person, cacheEntryOptions);
            try
            {
                NavigationManager.NavigateTo("/Home");
            }
            catch (Exception ex) when (ex is not NavigationException)
            {
                Console.WriteLine($"ошибка - {ex}");
            }

        }
        else
        {
            await response.Content.ReadAsStringAsync();
        }

    }
}
